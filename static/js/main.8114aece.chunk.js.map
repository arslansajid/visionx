{"version":3,"sources":["img/library.jpg","actions/ActionTypes.js","config.js","actions/Actions.js","containers/Home.js","components/Breadcrumbs.js","containers/Detail.js","components/BookTile.js","containers/FullResults.js","MainRouter.js","App.js","serviceWorker.js","reducers/SearchInputReducer.js","reducers/RootReducer.js","index.js","store/ConfigureStore.js"],"names":["module","exports","__webpack_require__","p","SET_SEARCH_INPUT","RESULTS_FETCHED","INFINITE_SCROLL_RESULTS_FETCHED","REVIEWS_FETCHED","CLIENT_KEY","fetchBookByKeyWord","keyword","dispatch","axios","get","concat","then","response","result","convert","xml2js","data","compact","console","log","searchResult","Object","keys","GoodreadsResponse","search","results","length","work","slice","totalResponse","_text","type","types","payload","catch","style","menuHeaderStyle","padding","background","color","display","justifyContent","alignItems","homeScreen","paddingLeft","backgroundColor","flexDirection","Option","props","react_default","a","createElement","Fragment","className","borderBottom","react_router_dom","to","pathname","value","id","label","author","MenuList","selectProps","options","chunk_5d200a41_browser_esm","children","searchInput","totalOptions","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelect","selected","setState","selectedBook","state","inputValue","searchOptions","totalResults","handleInputChange","bind","assertThisInitialized","newValue","replace","res","_this2","map","option","index","best_book","title","name","_this3","require","react_select_browser_esm","cacheOptions","loadOptions","onChange","placeholder","components","Component","connect","searchedInput","useStyles","makeStyles","theme","root","flexWrap","paper","spacing","SimpleBreadcrumbs","classes","Paper","elevation","Breadcrumbs","aria-label","Link","href","Typography","textTransform","routeName","split","Detail","fetchBookDataAndReviews","bookId","authorName","bookTitle","location","getState","bookDataResult","book","bookData","reviewResult","totalReviews","reviews","maxHeight","src","image_url","alt","height","width","_cdata","authors","average_rating","react_star_rating_component_default","editing","starCount","parseFloat","publisher","num_pages","publication_day","publication_month","publication_year","ratings_count","ratings_sum","reviews_count","window","BookTile","Card","CardImg","top","CardBody","CardTitle","CardSubtitle","CardText","parseInt","Button","FullResults","books","activePage","hasMoreItems","_this$state","match","params","q","toConsumableArray","loader","react_loader_spinner_default","ref","scrollParentRef","react_infinite_scroller_default","pageStart","loadMore","loadItems","hasMore","getScrollParent","key","components_BookTile","inifiniteScrollResults","MainRouter","react_router","exact","path","component","App","src_MainRouter","Boolean","hostname","combineReducers","arguments","undefined","action","rootReducer","store","createStore","applyMiddleware","logger","thunk","history","createBrowserHistory","basename","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8114aece.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/library.9eeccb7a.jpg\";","\nexport const SET_SEARCH_INPUT = 'SET_SEARCH_INPUT';\nexport const RESULTS_FETCHED = 'RESULTS_FETCHED';\nexport const INFINITE_SCROLL_RESULTS_FETCHED = 'INFINITE_SCROLL_RESULTS_FETCHED';\nexport const REVIEWS_FETCHED = 'REVIEWS_FETCHED';\n","export const CLIENT_KEY = 'DEZZre4OeBQSqC0L3wQQ';","import * as types from './ActionTypes';\nimport axios from 'axios';\nimport convert from 'xml-js';\nimport { CLIENT_KEY } from '../config';\n\nexport function setSearchInput(value) {\n  return {type: types.SET_SEARCH_INPUT, payload: value };\n}\n\nexport function fetchBooks(searchTerm, page) {\n  return (dispatch, getState) => {\n    // var inputValue = getState().searchInput;\n    return axios.get(`https://www.goodreads.com/search/index.xml?key=${CLIENT_KEY}&q=${searchTerm}&page=${page}`)\n    .then((response) => {\n      var result = convert.xml2js(response.data, {compact: true});\n      var searchResult = result.GoodreadsResponse.search.results.work;\n      dispatch({type: types.INFINITE_SCROLL_RESULTS_FETCHED, payload: searchResult});\n    })\n    .catch(() => {\n      console.log('Error fetching results...');\n    })\n  }\n}\n\nexport function fetchBookData(bookId) {\n  return (dispatch, getState) => {\n    return axios.get(`https://www.goodreads.com/book/show.xml?key=${CLIENT_KEY}&id=${bookId}`)\n    .then((response) => {\n      var result = convert.xml2js(response.data, {compact: true});\n      var bookDataResult = result.GoodreadsResponse.book;\n      dispatch({type: types.RESULTS_FETCHED, payload: bookDataResult});\n    })\n    .catch(() => {\n      console.log('Error fetching results...');\n    })\n  }\n}\n\nexport function fetchBookReviews(authorName, bookTitle) {\n  return (dispatch, getState) => {\n    return axios.get(`https://www.goodreads.com/book/title.xml?author=${authorName}&key=${CLIENT_KEY}&title=${bookTitle}`)\n    .then((response) => {\n      var result = convert.xml2js(response.data, {compact: true});\n      var reviewResult = result.GoodreadsResponse;\n      dispatch({type: types.REVIEWS_FETCHED, payload: reviewResult});\n    })\n    .catch(() => {\n      console.log('Error fetching reviews...');\n    })\n  }\n}\n\nexport function fetchBookByKeyWord(keyword) {\n  return (dispatch) => {\n    return axios.get(`https://www.goodreads.com/search/index.xml?key=${CLIENT_KEY}&q=${keyword}`)\n    .then((response) => {\n      var result = convert.xml2js(response.data, {compact: true});\n      console.log('action result', result);\n      var searchResult = Object.keys(result.GoodreadsResponse.search.results).length ? result.GoodreadsResponse.search.results.work.slice(0,5) : [];\n      var totalResponse = result.GoodreadsResponse.search['total-results']._text;\n      dispatch({type: types.RESULTS_FETCHED, payload: { searchResult, totalResponse }});\n    })\n    .catch(() => {\n      console.log('Error fetching reviews...');\n    })\n  }\n}\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AsyncSelect from 'react-select/async';\nimport { components } from 'react-select';\nimport { fetchBookByKeyWord } from '../actions/Actions';\n\nconst style = {\n  menuHeaderStyle: {\n    padding: '15px',\n    background: '#1a8e85',\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  homeScreen: {\n    paddingLeft: '0',\n    backgroundColor:'#000',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}\n\nconst Option = props => {\n  return (\n    <React.Fragment>\n      <div className=\"select-option\" style={{borderBottom: '1px solid', padding: '15px'}}>\n      <Link to={{ pathname: `/detail/${props.value.id}`, data: props.data }}>\n        <div>{props.label}</div>\n        <div>{props.value.author}</div>\n      </Link>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst MenuList = props => {\n  if(props.selectProps.options.length >= 5) {\n    return (\n      <components.MenuList {...props}>\n        {props.children}\n        <Link to={{ pathname: `/full-results/${props.options[0].value.searchInput}`, searchInput: props.options[0].value.searchInput }}>\n          <div style={style.menuHeaderStyle}>Show {props.options[0].value.totalOptions - 5} more results</div>\n        </Link>\n      </components.MenuList>\n    )\n    } else {\n      return (\n        <components.MenuList {...props}>\n          {props.children}\n        </components.MenuList>\n      )\n  }\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      selectedBook: '',\n      searchOptions: [],\n      totalResults: 0,\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async handleInputChange (newValue) {\n    var searchResult = '';\n    const inputValue = newValue.replace(/\\W/g, '');\n    this.setState({ inputValue });\n    await this.props.dispatch(fetchBookByKeyWord(newValue))\n      .then((res) => {\n        this.setState({\n          searchOptions: this.props.results,\n          totalResults: this.props.totalResponse\n        })\n        return this.props.results;\n      })\n      searchResult = this.props.results\n      searchResult && searchResult.length && searchResult.map((option, index) => {\n      option.label = option.best_book.title._text;\n      option.value = {name: option.best_book.title._text, author: option.best_book.author.name._text, id: option.best_book.id._text, totalOptions: this.props.totalResponse, searchInput: newValue };\n      return option;\n    })\n    return searchResult;\n  };\n\n  handleSelect = (selected) => {\n    this.setState({\n      selectedBook: selected\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"main\">\n        <div className=\"home-screen space-2\" style={style.homeScreen}>\n\t\t\t\t  <div className={'homeCoverStyle'} style={{background: `url(${require('../img/library.jpg')})`}}></div>\n\t\t\t\t\t<div className={'coverTextWrapper'}>\n            <div>\n              <Link to={{\n                pathname: `/full-results/${this.state.inputValue}`,\n                }}\n              >\n                <div className='searchButtonBar'>\n                  <h1 className='searchButtonText'>Search</h1>\n                </div>\n              </Link>\n              <AsyncSelect\n                className={'selectControl'}\n                cacheOptions\n                loadOptions={this.handleInputChange}\n                onChange={(value) => this.handleSelect(value)}\n                placeholder={`Search by keyword...`}\n                components={{ MenuList, Option }}\n              />\n            </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      </div>\n    )\n  }\n}\n\nHome.propTypes = {\n  searchInput: PropTypes.string,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    searchInput: state.searchInput.searchedInput,\n    results: state.searchInput.results.searchResult,\n    totalResponse: state.searchInput.results.totalResponse\n  };\n}\n\nexport default connect(mapStateToProps)(Home);\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  paper: {\n    padding: theme.spacing(1, 2),\n  },\n}));\n\nexport default function SimpleBreadcrumbs(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} className={classes.paper}>\n        <Breadcrumbs aria-label=\"Breadcrumb\">\n          <Link color=\"inherit\" href=\"/\">\n            Home\n          </Link>\n          <Typography style={{textTransform: 'capitalize'}} color=\"textPrimary\">\n            {props.routeName.split('/')[1]}\n          </Typography>\n        </Breadcrumbs>\n      </Paper>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport BreadCrumbs from '../components/Breadcrumbs';\nimport StarRatingComponent from 'react-star-rating-component';\nimport { fetchBookData, fetchBookReviews } from '../actions/Actions';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookData: {},\n      totalReviews: [],\n    };\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    if(location.data) {\n      this.fetchBookDataAndReviews();\n    }\n  }\n\n  fetchBookDataAndReviews = () => {\n    const { location } = this.props;\n    this.props.dispatch(fetchBookData(location.data.best_book.id._text))\n    .then((res) => {\n      this.setState({\n        bookData: this.props.results\n      })\n    })\n    this.props.dispatch(fetchBookReviews(location.data.best_book.author.name._text, location.data.best_book.title._text))\n    .then((res) => {\n      this.setState({\n        totalReviews: this.props.reviews\n      })\n    })\n  }\n\n  render() {\n    const { bookData } = this.state;\n    console.log('Props', this.props.location.data);\n    console.log('bookData', this.state.bookData);\n    console.log('totalReviews', this.state.totalReviews);\n    if(this.props.location.data) {\n      return (\n        <div className=\"container my-3\">\n          <div className=\"\">\n            <BreadCrumbs routeName={this.props.location.pathname} />\n          </div>\n          {Object.keys(bookData).length\n          ?\n          <div className=\"book-data\">\n            <div className=\"row\">\n              <div className=\"col-12 col-md-4 col-lg-4 mb-2\">\n                <img style={{maxHeight: '250px'}} src={bookData.image_url._text} alt=\"img-cover\" height=\"250px\" width=\"90%\"></img>\n              </div>\n              <div className=\"col-12 col-md-8 col-lg-8\">\n                <h3>{bookData.title._text ? bookData.title._text : bookData.title._cdata}</h3>\n                <h5>{bookData.authors.author.length ? bookData.authors.author[0].name._text : bookData.authors.author.name._text }</h5>\n                <p>Rating: {bookData.average_rating._text}</p>\n                <StarRatingComponent \n                  name=\"rating\" \n                  editing={false}\n                  starCount={5}\n                  value={parseFloat(bookData.average_rating._text)}\n                />\n                <h5>Publisher: <span className=\"book-data\">{bookData.publisher._text ? bookData.publisher._text : 'Data currently not available...'}</span></h5>\n                <h5>Num of pages: <span className=\"book-data\">{bookData.num_pages._cdata ? bookData.num_pages._cdata : 'Data currently not available...'}</span></h5>\n                <h5>Published on: <span className=\"book-data\">{bookData.publication_day._text ? `${bookData.publication_day._text}-${bookData.publication_month._text}-${bookData.publication_year._text}` : 'Data currently not available...'}</span></h5>\n              </div>\n            </div>\n            <hr />\n            <div className=\"row my-3\">\n              <div className=\"col\">\n                <h3>Reviews</h3>\n                <h5>Ratings Count: <span className=\"book-data\">{bookData.work.ratings_count ? bookData.work.ratings_count._text : 'Data currently not available...'}</span></h5>\n                <h5>Ratings Sum: <span className=\"book-data\">{bookData.work.ratings_sum ? bookData.work.ratings_sum._text : 'Data currently not available...'}</span></h5>\n                <h5>Reviews Count: <span className=\"book-data\">{bookData.work.reviews_count ? bookData.work.reviews_count._text : 'Data currently not available...'}</span></h5>\n              </div>\n            </div>\n          </div>\n          :\n          null\n          }\n      </div>\n    )\n    } else {\n        window.location.replace('/');\n        return null;\n    }\n  }\n}\n\nDetail.propTypes = {\n  searchInput: PropTypes.string,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    searchInput: state.searchInput.searchedInput,\n    results: state.searchInput.results,\n    reviews: state.searchInput.reviews,\n  };\n}\n\nexport default connect(mapStateToProps)(Detail);\n\n","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport StarRatingComponent from 'react-star-rating-component';\n\nclass BookTile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentWillMount(){\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <Card>\n          <CardImg className=\"card-image\" top width=\"100%\" src={this.props.data.best_book.image_url._text} alt=\"Card image cap\" />\n          <CardBody>\n            <CardTitle className=\"card-book-title\">{this.props.data.best_book.title ? this.props.data.best_book.title._text : ''}</CardTitle>\n            <CardSubtitle>{this.props.data.best_book.author ? this.props.data.best_book.author.name._text : ''}</CardSubtitle>\n            <CardText>Rating { this.props.data.average_rating ? this.props.data.average_rating._text : ''}</CardText>\n            <StarRatingComponent \n              name=\"rating\" \n              editing={false}\n              starCount={5}\n              value={parseInt(this.props.data.average_rating._text)}\n            />\n            <Link to={{ pathname: `/detail/${this.props.data.id._text}`, data: this.props.data }}>\n              <Button className=\"btn-primary w-100\">View Details</Button>\n            </Link>\n          </CardBody>\n        </Card>\n      </div>\n      )\n    }\n  }\n\nexport default BookTile;\n\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BreadCumbs from '../components/Breadcrumbs'; \nimport BookTile from '../components/BookTile';\nimport axios from 'axios';\nimport convert from 'xml-js';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport Loader from 'react-loader-spinner';\nimport { CLIENT_KEY } from '../config';\n\nclass FullResults extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      activePage: 1,\n      hasMoreItems: true,\n      totalResults: 0\n    };\n  }\n\nloadItems() {\n  const { activePage, books, totalResults } = this.state;\n    var searchResult = [];\n    let totalResponse = 0;\n    if(totalResults-1 !== books.length ) {\n      axios.get(`https://www.goodreads.com/search/index.xml?key=${CLIENT_KEY}&q=${this.props.match.params.q}&page=${activePage}`)\n      .then((response) => {\n        var result = convert.xml2js(response.data, {compact: true});\n        searchResult = result.GoodreadsResponse.search.results.work;\n        totalResponse = result.GoodreadsResponse.search['total-results']._text;\n        this.setState({\n          books: searchResult ? [...books, ...searchResult] : this.state.books ,\n          totalResults: totalResponse,\n          activePage: activePage + 1,\n          }, () => {\n            this.setState({\n              hasMoreItems: totalResponse > books.length ? true : false\n            })\n          })\n        })\n      } else {\n      this.setState({ hasMoreItems: false })\n    }\n}\n\n  render() {\n    const { books } = this.state;\n    const loader = <div className=\"loader\">\n      <Loader\n        className=\"\"\n        type=\"Oval\"\n        color=\"#1a8e85\"\n        height=\"100\"\t\n        width=\"150\"\n      />\n      </div>;\n    return(\n      <div className=\"container\" ref={(ref) => this.scrollParentRef = ref}>\n        <BreadCumbs\n          routeName={this.props.location.pathname}\n        />\n        <div className=\"col\">\n            <h5>Showing results for: {this.props.match.params.q}</h5>\n        </div>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 my-3\">\n              <InfiniteScroll\n                pageStart={0}\n                loadMore={this.loadItems.bind(this)}\n                hasMore={this.state.hasMoreItems}\n                loader={loader}\n                getScrollParent={() => this.scrollParentRef}\n              >\n              {books.map((book,index) => {\n              return (\n                <div className=\"tracks my-3\" key={index}>\n                  <BookTile\n                    data={book}\n                  />\n                </div>\n                )\n              })}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nFullResults.propTypes = {\n  searchInput: PropTypes.string,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    searchInput: state.searchInput.searchedInput,\n    results: state.searchInput.inifiniteScrollResults\n  };\n}\n\nexport default connect(mapStateToProps)(FullResults);\n\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Detail from './containers/Detail';\nimport FullResults from './containers/FullResults'\n\n\nconst MainRouter = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/detail/:bookId\" component={Detail} />\n    <Route exact path=\"/full-results/:q\" component={FullResults} />\n  </Switch>\n)\n\nexport default MainRouter;\n","import React from 'react';\nimport './App.css';\nimport MainRouter from './MainRouter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_SEARCH_INPUT, RESULTS_FETCHED, INFINITE_SCROLL_RESULTS_FETCHED, REVIEWS_FETCHED } from '../actions/ActionTypes';\nimport { combineReducers } from 'redux';\n\nexport function searchedInput(state = '', action) {\n    switch (action.type) {\n      case SET_SEARCH_INPUT:\n        console.log('SET_SEARCH_INPUT Action')\n        return action.payload;\n      default:\n        return state;\n    }\n  }\n\nexport function results(state = [], action) {\n  switch(action.type) {\n    case RESULTS_FETCHED:\n    return action.payload;\n    default: \n    return state;\n  }\n}\n\nexport function reviews(state = [], action) {\n  switch(action.type) {\n    case REVIEWS_FETCHED:\n    return action.payload;\n    default: \n    return state;\n  }\n}\n\nexport function inifiniteScrollResults(state = [], action) {\n  switch(action.type) {\n    case INFINITE_SCROLL_RESULTS_FETCHED:\n    return [ ...state, ...action.payload.searchResult ];\n    default: \n    return state;\n  }\n\n}\n\nexport default combineReducers({\n  searchedInput,\n  results,\n  reviews,\n  inifiniteScrollResults\n})","import {combineReducers} from 'redux';\nimport searchInput from './SearchInputReducer';\n\nconst rootReducer = combineReducers({\n  searchInput\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport configureStore from './store/ConfigureStore';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\n\nconst store = configureStore();\nconst history = createBrowserHistory({ basename: '/' });\n\nReactDOM.render(\n<Provider store={store}>\n  <Router history={history}>\n    <App />\n  </Router>\n</Provider>\n  ,document.getElementById('root'));\n\n\nserviceWorker.unregister();\n\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers/RootReducer';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    applyMiddleware(logger, thunk)\n  );\n}\n"],"sourceRoot":""}